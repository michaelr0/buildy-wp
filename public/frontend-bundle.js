!function(e){var g={};function i(t){if(g[t])return g[t].exports;var n=g[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=g,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)i.d(e,g,function(t){return n[t]}.bind(null,g));return e},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},i.p="",i(i.s=0)}([function(t,n,e){e(2),t.exports=e(1)},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zYXNzL3N0eWxlLnNjc3M/YTI4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/util/debounce.js\n/* Debounce prevents burst fires by triggering once, then ignoring until the timeout\r\n    * @param func -- The function you\'re debouncing\r\n    * @param wait -- Delay before firing again after the hit\r\n    * @param immediate -- fire instantly at the start\r\n    * @param trailing -- fire at the end no matter what\r\n    * @returns {Function}\r\n    */\nfunction debounce(func, wait, immediate, trailing) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      } // Added this so it will always fire at the end as well\n\n\n      if (trailing) {\n        func.apply(context, args);\n        console.log(\'fired later\');\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n// CONCATENATED MODULE: ./src/js/components/accordion.js\n\n\nclass accordion_Accordion {\n  constructor(el, settings) {\n    this.group = el;\n    this.isToggle = this.group.dataset.hasOwnProperty(\'istoggle\');\n    this.accordionItems = this.group.getElementsByClassName("accordion");\n    this.toggles = this.group.getElementsByClassName("accordion-title");\n    this.contents = this.group.getElementsByClassName("accordion-body");\n\n    if (!this.group || !this.accordionItems || !this.toggles || !this.contents) {\n      return;\n    } // Set default settings if necessary\n\n\n    this.settings = {\n      speed: 300,\n      one_visible: this.isToggle,\n      ...settings\n    }; // Setup inital positions\n\n    this.sizeAccordions();\n    window.addEventListener(\'resize\', debounce(() => this.sizeAccordions(), 50)); // Setup click handler\n\n    this.group.addEventListener("click", e => {\n      if (e.target.classList.contains("accordion-title")) {\n        e.preventDefault();\n        let num = 0;\n\n        for (let i = 0; i < this.toggles.length; i++) {\n          if (this.toggles[i] === e.target) {\n            num = i;\n            break;\n          }\n        }\n\n        if (!e.target.parentNode.hasAttribute("open")) {\n          this.open(num);\n        } else {\n          this.close(num);\n        }\n      }\n    });\n  }\n\n  sizeAccordions() {\n    if (!this.accordionItems) {\n      return;\n    }\n\n    for (let i = 0; i < this.accordionItems.length; i++) {\n      const item = this.accordionItems[i];\n      const toggle = this.toggles[i];\n      const content = this.contents[i]; // Set transition-duration to match JS setting\n\n      item.style.transitionDuration = this.settings.speed + "ms"; // Set initial height to transition from\n\n      if (!item.hasAttribute("open")) {\n        item.style.height = toggle.clientHeight + "px";\n      } else {\n        item.style.height = toggle.clientHeight + content.clientHeight + "px";\n      }\n    }\n  }\n\n  open(i) {\n    const item = this.accordionItems[i];\n    const toggle = this.toggles[i];\n    const content = this.contents[i]; // If applicable, hide all the other items first\n\n    if (this.settings.one_visible) {\n      for (let a = 0; a < this.toggles.length; a++) {\n        if (i !== a) this.close(a);\n      }\n    } // Update class\n\n\n    item.classList.remove("is-closing"); // Get height of toggle\n\n    const toggle_height = toggle.clientHeight; // Momentarily show the contents just to get the height\n\n    item.setAttribute("open", true);\n    toggle.setAttribute("aria-expanded", true);\n    const content_height = content.clientHeight;\n    item.removeAttribute("open"); // Set the correct height and let CSS transition it\n\n    item.style.height = toggle_height + content_height + "px"; // Finally set the open attr\n\n    item.setAttribute("open", true);\n  }\n\n  close(i) {\n    const item = this.accordionItems[i];\n    const toggle = this.toggles[i]; // Get height of toggle\n\n    const toggle_height = toggle.clientHeight; // Set aria attribute to false\n\n    toggle.setAttribute("aria-expanded", false); // Set the height so only the toggle is visible\n\n    item.style.height = toggle_height + "px";\n    item.removeAttribute("open");\n  }\n\n}\n\n/* harmony default export */ var accordion = (() => {\n  const els = document.getElementsByClassName("bmcb-accordion");\n\n  for (let i = 0; i < els.length; i++) {\n    const accordion = new accordion_Accordion(els[i]);\n  }\n});\n// CONCATENATED MODULE: ./src/js/main.js\n\naccordion();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy91dGlsL2RlYm91bmNlLmpzPzRjZTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvYWNjb3JkaW9uLmpzPzc4ZmQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4uanM/MDk0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBEZWJvdW5jZSBwcmV2ZW50cyBidXJzdCBmaXJlcyBieSB0cmlnZ2VyaW5nIG9uY2UsIHRoZW4gaWdub3JpbmcgdW50aWwgdGhlIHRpbWVvdXRcclxuICAgICogQHBhcmFtIGZ1bmMgLS0gVGhlIGZ1bmN0aW9uIHlvdSdyZSBkZWJvdW5jaW5nXHJcbiAgICAqIEBwYXJhbSB3YWl0IC0tIERlbGF5IGJlZm9yZSBmaXJpbmcgYWdhaW4gYWZ0ZXIgdGhlIGhpdFxyXG4gICAgKiBAcGFyYW0gaW1tZWRpYXRlIC0tIGZpcmUgaW5zdGFudGx5IGF0IHRoZSBzdGFydFxyXG4gICAgKiBAcGFyYW0gdHJhaWxpbmcgLS0gZmlyZSBhdCB0aGUgZW5kIG5vIG1hdHRlciB3aGF0XHJcbiAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn1cclxuICAgICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUsIHRyYWlsaW5nKSB7XG4gIHZhciB0aW1lb3V0O1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjb250ZXh0ID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcblxuICAgIHZhciBsYXRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuXG4gICAgICBpZiAoIWltbWVkaWF0ZSkge1xuICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgfSAvLyBBZGRlZCB0aGlzIHNvIGl0IHdpbGwgYWx3YXlzIGZpcmUgYXQgdGhlIGVuZCBhcyB3ZWxsXG5cblxuICAgICAgaWYgKHRyYWlsaW5nKSB7XG4gICAgICAgIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdmaXJlZCBsYXRlcicpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgIGlmIChjYWxsTm93KSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICB9O1xufSIsImltcG9ydCBkZWJvdW5jZSBmcm9tICcuLi91dGlsL2RlYm91bmNlJztcblxuY2xhc3MgQWNjb3JkaW9uIHtcbiAgY29uc3RydWN0b3IoZWwsIHNldHRpbmdzKSB7XG4gICAgdGhpcy5ncm91cCA9IGVsO1xuICAgIHRoaXMuaXNUb2dnbGUgPSB0aGlzLmdyb3VwLmRhdGFzZXQuaGFzT3duUHJvcGVydHkoJ2lzdG9nZ2xlJyk7XG4gICAgdGhpcy5hY2NvcmRpb25JdGVtcyA9IHRoaXMuZ3JvdXAuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFjY29yZGlvblwiKTtcbiAgICB0aGlzLnRvZ2dsZXMgPSB0aGlzLmdyb3VwLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhY2NvcmRpb24tdGl0bGVcIik7XG4gICAgdGhpcy5jb250ZW50cyA9IHRoaXMuZ3JvdXAuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImFjY29yZGlvbi1ib2R5XCIpO1xuXG4gICAgaWYgKCF0aGlzLmdyb3VwIHx8ICF0aGlzLmFjY29yZGlvbkl0ZW1zIHx8ICF0aGlzLnRvZ2dsZXMgfHwgIXRoaXMuY29udGVudHMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9IC8vIFNldCBkZWZhdWx0IHNldHRpbmdzIGlmIG5lY2Vzc2FyeVxuXG5cbiAgICB0aGlzLnNldHRpbmdzID0ge1xuICAgICAgc3BlZWQ6IDMwMCxcbiAgICAgIG9uZV92aXNpYmxlOiB0aGlzLmlzVG9nZ2xlLFxuICAgICAgLi4uc2V0dGluZ3NcbiAgICB9OyAvLyBTZXR1cCBpbml0YWwgcG9zaXRpb25zXG5cbiAgICB0aGlzLnNpemVBY2NvcmRpb25zKCk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKCgpID0+IHRoaXMuc2l6ZUFjY29yZGlvbnMoKSwgNTApKTsgLy8gU2V0dXAgY2xpY2sgaGFuZGxlclxuXG4gICAgdGhpcy5ncm91cC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiYWNjb3JkaW9uLXRpdGxlXCIpKSB7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgbGV0IG51bSA9IDA7XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRvZ2dsZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICBpZiAodGhpcy50b2dnbGVzW2ldID09PSBlLnRhcmdldCkge1xuICAgICAgICAgICAgbnVtID0gaTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghZS50YXJnZXQucGFyZW50Tm9kZS5oYXNBdHRyaWJ1dGUoXCJvcGVuXCIpKSB7XG4gICAgICAgICAgdGhpcy5vcGVuKG51bSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGhpcy5jbG9zZShudW0pO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzaXplQWNjb3JkaW9ucygpIHtcbiAgICBpZiAoIXRoaXMuYWNjb3JkaW9uSXRlbXMpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWNjb3JkaW9uSXRlbXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmFjY29yZGlvbkl0ZW1zW2ldO1xuICAgICAgY29uc3QgdG9nZ2xlID0gdGhpcy50b2dnbGVzW2ldO1xuICAgICAgY29uc3QgY29udGVudCA9IHRoaXMuY29udGVudHNbaV07IC8vIFNldCB0cmFuc2l0aW9uLWR1cmF0aW9uIHRvIG1hdGNoIEpTIHNldHRpbmdcblxuICAgICAgaXRlbS5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSB0aGlzLnNldHRpbmdzLnNwZWVkICsgXCJtc1wiOyAvLyBTZXQgaW5pdGlhbCBoZWlnaHQgdG8gdHJhbnNpdGlvbiBmcm9tXG5cbiAgICAgIGlmICghaXRlbS5oYXNBdHRyaWJ1dGUoXCJvcGVuXCIpKSB7XG4gICAgICAgIGl0ZW0uc3R5bGUuaGVpZ2h0ID0gdG9nZ2xlLmNsaWVudEhlaWdodCArIFwicHhcIjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGl0ZW0uc3R5bGUuaGVpZ2h0ID0gdG9nZ2xlLmNsaWVudEhlaWdodCArIGNvbnRlbnQuY2xpZW50SGVpZ2h0ICsgXCJweFwiO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIG9wZW4oaSkge1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmFjY29yZGlvbkl0ZW1zW2ldO1xuICAgIGNvbnN0IHRvZ2dsZSA9IHRoaXMudG9nZ2xlc1tpXTtcbiAgICBjb25zdCBjb250ZW50ID0gdGhpcy5jb250ZW50c1tpXTsgLy8gSWYgYXBwbGljYWJsZSwgaGlkZSBhbGwgdGhlIG90aGVyIGl0ZW1zIGZpcnN0XG5cbiAgICBpZiAodGhpcy5zZXR0aW5ncy5vbmVfdmlzaWJsZSkge1xuICAgICAgZm9yIChsZXQgYSA9IDA7IGEgPCB0aGlzLnRvZ2dsZXMubGVuZ3RoOyBhKyspIHtcbiAgICAgICAgaWYgKGkgIT09IGEpIHRoaXMuY2xvc2UoYSk7XG4gICAgICB9XG4gICAgfSAvLyBVcGRhdGUgY2xhc3NcblxuXG4gICAgaXRlbS5jbGFzc0xpc3QucmVtb3ZlKFwiaXMtY2xvc2luZ1wiKTsgLy8gR2V0IGhlaWdodCBvZiB0b2dnbGVcblxuICAgIGNvbnN0IHRvZ2dsZV9oZWlnaHQgPSB0b2dnbGUuY2xpZW50SGVpZ2h0OyAvLyBNb21lbnRhcmlseSBzaG93IHRoZSBjb250ZW50cyBqdXN0IHRvIGdldCB0aGUgaGVpZ2h0XG5cbiAgICBpdGVtLnNldEF0dHJpYnV0ZShcIm9wZW5cIiwgdHJ1ZSk7XG4gICAgdG9nZ2xlLnNldEF0dHJpYnV0ZShcImFyaWEtZXhwYW5kZWRcIiwgdHJ1ZSk7XG4gICAgY29uc3QgY29udGVudF9oZWlnaHQgPSBjb250ZW50LmNsaWVudEhlaWdodDtcbiAgICBpdGVtLnJlbW92ZUF0dHJpYnV0ZShcIm9wZW5cIik7IC8vIFNldCB0aGUgY29ycmVjdCBoZWlnaHQgYW5kIGxldCBDU1MgdHJhbnNpdGlvbiBpdFxuXG4gICAgaXRlbS5zdHlsZS5oZWlnaHQgPSB0b2dnbGVfaGVpZ2h0ICsgY29udGVudF9oZWlnaHQgKyBcInB4XCI7IC8vIEZpbmFsbHkgc2V0IHRoZSBvcGVuIGF0dHJcblxuICAgIGl0ZW0uc2V0QXR0cmlidXRlKFwib3BlblwiLCB0cnVlKTtcbiAgfVxuXG4gIGNsb3NlKGkpIHtcbiAgICBjb25zdCBpdGVtID0gdGhpcy5hY2NvcmRpb25JdGVtc1tpXTtcbiAgICBjb25zdCB0b2dnbGUgPSB0aGlzLnRvZ2dsZXNbaV07IC8vIEdldCBoZWlnaHQgb2YgdG9nZ2xlXG5cbiAgICBjb25zdCB0b2dnbGVfaGVpZ2h0ID0gdG9nZ2xlLmNsaWVudEhlaWdodDsgLy8gU2V0IGFyaWEgYXR0cmlidXRlIHRvIGZhbHNlXG5cbiAgICB0b2dnbGUuc2V0QXR0cmlidXRlKFwiYXJpYS1leHBhbmRlZFwiLCBmYWxzZSk7IC8vIFNldCB0aGUgaGVpZ2h0IHNvIG9ubHkgdGhlIHRvZ2dsZSBpcyB2aXNpYmxlXG5cbiAgICBpdGVtLnN0eWxlLmhlaWdodCA9IHRvZ2dsZV9oZWlnaHQgKyBcInB4XCI7XG4gICAgaXRlbS5yZW1vdmVBdHRyaWJ1dGUoXCJvcGVuXCIpO1xuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgKCgpID0+IHtcbiAgY29uc3QgZWxzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImJtY2ItYWNjb3JkaW9uXCIpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYWNjb3JkaW9uID0gbmV3IEFjY29yZGlvbihlbHNbaV0pO1xuICB9XG59KTsiLCJpbXBvcnQgYWNjb3JkaW9ucyBmcm9tICcuL2NvbXBvbmVudHMvYWNjb3JkaW9uJztcbmFjY29yZGlvbnMoKTsiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQy9HQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')}]);