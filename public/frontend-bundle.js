!function(e){var g={};function i(t){if(g[t])return g[t].exports;var n=g[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=g,i.d=function(t,n,e){i.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(n,t){if(1&t&&(n=i(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var e=Object.create(null);if(i.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var g in n)i.d(e,g,function(t){return n[t]}.bind(null,g));return e},i.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(n,"a",n),n},i.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},i.p="",i(i.s=0)}([function(t,n,e){e(2),t.exports=e(1)},function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9zYXNzL3N0eWxlLnNjc3M/YTI4MCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/js/util/debounce.js\n/* Debounce prevents burst fires by triggering once, then ignoring until the timeout\n    * @param func -- The function you\'re debouncing\n    * @param wait -- Delay before firing again after the hit\n    * @param immediate -- fire instantly at the start\n    * @param trailing -- fire at the end no matter what\n    * @returns {Function}\n    */\nfunction debounce(func, wait, immediate, trailing) {\n  var timeout;\n  return function () {\n    var context = this,\n        args = arguments;\n\n    var later = function () {\n      timeout = null;\n\n      if (!immediate) {\n        func.apply(context, args);\n      } // Added this so it will always fire at the end as well\n\n\n      if (trailing) {\n        func.apply(context, args);\n        console.log(\'fired later\');\n      }\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n}\n// CONCATENATED MODULE: ./src/js/components/accordion.js\n\n\nclass accordion_Accordion {\n  constructor(el, settings) {\n    this.group = el;\n    this.accordionItems = this.group.getElementsByClassName("accordion");\n    this.toggles = this.group.getElementsByClassName("accordion-title");\n    this.contents = this.group.getElementsByClassName("accordion-body");\n\n    if (!this.group || !this.accordionItems || !this.toggles || !this.contents) {\n      return;\n    } // Set default settings if necessary\n\n\n    this.settings = {\n      speed: 300,\n      one_visible: false,\n      ...settings\n    }; // Setup inital positions\n\n    this.sizeAccordions();\n    window.addEventListener(\'resize\', debounce(() => this.sizeAccordions(), 50)); // Setup click handler\n\n    this.group.addEventListener("click", e => {\n      if (e.target.classList.contains("accordion-title")) {\n        e.preventDefault();\n        let num = 0;\n\n        for (let i = 0; i < this.toggles.length; i++) {\n          if (this.toggles[i] === e.target) {\n            num = i;\n            break;\n          }\n        }\n\n        if (!e.target.parentNode.hasAttribute("open")) {\n          this.open(num);\n        } else {\n          this.close(num);\n        }\n      }\n    });\n  }\n\n  sizeAccordions() {\n    if (!this.accordionItems) {\n      return;\n    }\n\n    for (let i = 0; i < this.accordionItems.length; i++) {\n      const item = this.accordionItems[i];\n      const toggle = this.toggles[i];\n      const content = this.contents[i]; // Set transition-duration to match JS setting\n\n      item.style.transitionDuration = this.settings.speed + "ms"; // Set initial height to transition from\n\n      if (!item.hasAttribute("open")) {\n        item.style.height = toggle.clientHeight + "px";\n      } else {\n        item.style.height = toggle.clientHeight + content.clientHeight + "px";\n      }\n    }\n  }\n\n  open(i) {\n    const item = this.accordionItems[i];\n    const toggle = this.toggles[i];\n    const content = this.contents[i]; // If applicable, hide all the other items first\n\n    if (this.settings.one_visible) {\n      for (let a = 0; a < this.toggles.length; a++) {\n        if (i !== a) this.close(a);\n      }\n    } // Update class\n\n\n    item.classList.remove("is-closing"); // Get height of toggle\n\n    const toggle_height = toggle.clientHeight; // Momentarily show the contents just to get the height\n\n    item.setAttribute("open", true);\n    toggle.setAttribute("aria-expanded", true);\n    const content_height = content.clientHeight;\n    item.removeAttribute("open"); // Set the correct height and let CSS transition it\n\n    item.style.height = toggle_height + content_height + "px"; // Finally set the open attr\n\n    item.setAttribute("open", true);\n  }\n\n  close(i) {\n    const item = this.accordionItems[i];\n    const toggle = this.toggles[i]; // Get height of toggle\n\n    const toggle_height = toggle.clientHeight; // Set aria attribute to false\n\n    toggle.setAttribute("aria-expanded", false); // Set the height so only the toggle is visible\n\n    item.style.height = toggle_height + "px";\n    item.removeAttribute("open");\n  }\n\n}\n\n/* harmony default export */ var accordion = (() => {\n  const els = document.getElementsByClassName("bmcb-accordion");\n\n  for (let i = 0; i < els.length; i++) {\n    const accordion = new accordion_Accordion(els[i]);\n  }\n});\n// CONCATENATED MODULE: ./src/js/main.js\n\naccordion();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9qcy91dGlsL2RlYm91bmNlLmpzPzRjZTYiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2NvbXBvbmVudHMvYWNjb3JkaW9uLmpzPzc4ZmQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL21haW4uanM/MDk0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBEZWJvdW5jZSBwcmV2ZW50cyBidXJzdCBmaXJlcyBieSB0cmlnZ2VyaW5nIG9uY2UsIHRoZW4gaWdub3JpbmcgdW50aWwgdGhlIHRpbWVvdXRcbiAgICAqIEBwYXJhbSBmdW5jIC0tIFRoZSBmdW5jdGlvbiB5b3UncmUgZGVib3VuY2luZ1xuICAgICogQHBhcmFtIHdhaXQgLS0gRGVsYXkgYmVmb3JlIGZpcmluZyBhZ2FpbiBhZnRlciB0aGUgaGl0XG4gICAgKiBAcGFyYW0gaW1tZWRpYXRlIC0tIGZpcmUgaW5zdGFudGx5IGF0IHRoZSBzdGFydFxuICAgICogQHBhcmFtIHRyYWlsaW5nIC0tIGZpcmUgYXQgdGhlIGVuZCBubyBtYXR0ZXIgd2hhdFxuICAgICogQHJldHVybnMge0Z1bmN0aW9ufVxuICAgICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBpbW1lZGlhdGUsIHRyYWlsaW5nKSB7XG4gIHZhciB0aW1lb3V0O1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBjb250ZXh0ID0gdGhpcyxcbiAgICAgICAgYXJncyA9IGFyZ3VtZW50cztcblxuICAgIHZhciBsYXRlciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHRpbWVvdXQgPSBudWxsO1xuXG4gICAgICBpZiAoIWltbWVkaWF0ZSkge1xuICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICAgICAgfSAvLyBBZGRlZCB0aGlzIHNvIGl0IHdpbGwgYWx3YXlzIGZpcmUgYXQgdGhlIGVuZCBhcyB3ZWxsXG5cblxuICAgICAgaWYgKHRyYWlsaW5nKSB7XG4gICAgICAgIGZ1bmMuYXBwbHkoY29udGV4dCwgYXJncyk7XG4gICAgICAgIGNvbnNvbGUubG9nKCdmaXJlZCBsYXRlcicpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICB2YXIgY2FsbE5vdyA9IGltbWVkaWF0ZSAmJiAhdGltZW91dDtcbiAgICBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgdGltZW91dCA9IHNldFRpbWVvdXQobGF0ZXIsIHdhaXQpO1xuICAgIGlmIChjYWxsTm93KSBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpO1xuICB9O1xufSIsImltcG9ydCBkZWJvdW5jZSBmcm9tICcuLi91dGlsL2RlYm91bmNlJztcblxuY2xhc3MgQWNjb3JkaW9uIHtcbiAgY29uc3RydWN0b3IoZWwsIHNldHRpbmdzKSB7XG4gICAgdGhpcy5ncm91cCA9IGVsO1xuICAgIHRoaXMuYWNjb3JkaW9uSXRlbXMgPSB0aGlzLmdyb3VwLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhY2NvcmRpb25cIik7XG4gICAgdGhpcy50b2dnbGVzID0gdGhpcy5ncm91cC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYWNjb3JkaW9uLXRpdGxlXCIpO1xuICAgIHRoaXMuY29udGVudHMgPSB0aGlzLmdyb3VwLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXCJhY2NvcmRpb24tYm9keVwiKTtcblxuICAgIGlmICghdGhpcy5ncm91cCB8fCAhdGhpcy5hY2NvcmRpb25JdGVtcyB8fCAhdGhpcy50b2dnbGVzIHx8ICF0aGlzLmNvbnRlbnRzKSB7XG4gICAgICByZXR1cm47XG4gICAgfSAvLyBTZXQgZGVmYXVsdCBzZXR0aW5ncyBpZiBuZWNlc3NhcnlcblxuXG4gICAgdGhpcy5zZXR0aW5ncyA9IHtcbiAgICAgIHNwZWVkOiAzMDAsXG4gICAgICBvbmVfdmlzaWJsZTogZmFsc2UsXG4gICAgICAuLi5zZXR0aW5nc1xuICAgIH07IC8vIFNldHVwIGluaXRhbCBwb3NpdGlvbnNcblxuICAgIHRoaXMuc2l6ZUFjY29yZGlvbnMoKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZGVib3VuY2UoKCkgPT4gdGhpcy5zaXplQWNjb3JkaW9ucygpLCA1MCkpOyAvLyBTZXR1cCBjbGljayBoYW5kbGVyXG5cbiAgICB0aGlzLmdyb3VwLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlID0+IHtcbiAgICAgIGlmIChlLnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJhY2NvcmRpb24tdGl0bGVcIikpIHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBsZXQgbnVtID0gMDtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMudG9nZ2xlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmICh0aGlzLnRvZ2dsZXNbaV0gPT09IGUudGFyZ2V0KSB7XG4gICAgICAgICAgICBudW0gPSBpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCFlLnRhcmdldC5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZShcIm9wZW5cIikpIHtcbiAgICAgICAgICB0aGlzLm9wZW4obnVtKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmNsb3NlKG51bSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNpemVBY2NvcmRpb25zKCkge1xuICAgIGlmICghdGhpcy5hY2NvcmRpb25JdGVtcykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5hY2NvcmRpb25JdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgaXRlbSA9IHRoaXMuYWNjb3JkaW9uSXRlbXNbaV07XG4gICAgICBjb25zdCB0b2dnbGUgPSB0aGlzLnRvZ2dsZXNbaV07XG4gICAgICBjb25zdCBjb250ZW50ID0gdGhpcy5jb250ZW50c1tpXTsgLy8gU2V0IHRyYW5zaXRpb24tZHVyYXRpb24gdG8gbWF0Y2ggSlMgc2V0dGluZ1xuXG4gICAgICBpdGVtLnN0eWxlLnRyYW5zaXRpb25EdXJhdGlvbiA9IHRoaXMuc2V0dGluZ3Muc3BlZWQgKyBcIm1zXCI7IC8vIFNldCBpbml0aWFsIGhlaWdodCB0byB0cmFuc2l0aW9uIGZyb21cblxuICAgICAgaWYgKCFpdGVtLmhhc0F0dHJpYnV0ZShcIm9wZW5cIikpIHtcbiAgICAgICAgaXRlbS5zdHlsZS5oZWlnaHQgPSB0b2dnbGUuY2xpZW50SGVpZ2h0ICsgXCJweFwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaXRlbS5zdHlsZS5oZWlnaHQgPSB0b2dnbGUuY2xpZW50SGVpZ2h0ICsgY29udGVudC5jbGllbnRIZWlnaHQgKyBcInB4XCI7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgb3BlbihpKSB7XG4gICAgY29uc3QgaXRlbSA9IHRoaXMuYWNjb3JkaW9uSXRlbXNbaV07XG4gICAgY29uc3QgdG9nZ2xlID0gdGhpcy50b2dnbGVzW2ldO1xuICAgIGNvbnN0IGNvbnRlbnQgPSB0aGlzLmNvbnRlbnRzW2ldOyAvLyBJZiBhcHBsaWNhYmxlLCBoaWRlIGFsbCB0aGUgb3RoZXIgaXRlbXMgZmlyc3RcblxuICAgIGlmICh0aGlzLnNldHRpbmdzLm9uZV92aXNpYmxlKSB7XG4gICAgICBmb3IgKGxldCBhID0gMDsgYSA8IHRoaXMudG9nZ2xlcy5sZW5ndGg7IGErKykge1xuICAgICAgICBpZiAoaSAhPT0gYSkgdGhpcy5jbG9zZShhKTtcbiAgICAgIH1cbiAgICB9IC8vIFVwZGF0ZSBjbGFzc1xuXG5cbiAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJpcy1jbG9zaW5nXCIpOyAvLyBHZXQgaGVpZ2h0IG9mIHRvZ2dsZVxuXG4gICAgY29uc3QgdG9nZ2xlX2hlaWdodCA9IHRvZ2dsZS5jbGllbnRIZWlnaHQ7IC8vIE1vbWVudGFyaWx5IHNob3cgdGhlIGNvbnRlbnRzIGp1c3QgdG8gZ2V0IHRoZSBoZWlnaHRcblxuICAgIGl0ZW0uc2V0QXR0cmlidXRlKFwib3BlblwiLCB0cnVlKTtcbiAgICB0b2dnbGUuc2V0QXR0cmlidXRlKFwiYXJpYS1leHBhbmRlZFwiLCB0cnVlKTtcbiAgICBjb25zdCBjb250ZW50X2hlaWdodCA9IGNvbnRlbnQuY2xpZW50SGVpZ2h0O1xuICAgIGl0ZW0ucmVtb3ZlQXR0cmlidXRlKFwib3BlblwiKTsgLy8gU2V0IHRoZSBjb3JyZWN0IGhlaWdodCBhbmQgbGV0IENTUyB0cmFuc2l0aW9uIGl0XG5cbiAgICBpdGVtLnN0eWxlLmhlaWdodCA9IHRvZ2dsZV9oZWlnaHQgKyBjb250ZW50X2hlaWdodCArIFwicHhcIjsgLy8gRmluYWxseSBzZXQgdGhlIG9wZW4gYXR0clxuXG4gICAgaXRlbS5zZXRBdHRyaWJ1dGUoXCJvcGVuXCIsIHRydWUpO1xuICB9XG5cbiAgY2xvc2UoaSkge1xuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmFjY29yZGlvbkl0ZW1zW2ldO1xuICAgIGNvbnN0IHRvZ2dsZSA9IHRoaXMudG9nZ2xlc1tpXTsgLy8gR2V0IGhlaWdodCBvZiB0b2dnbGVcblxuICAgIGNvbnN0IHRvZ2dsZV9oZWlnaHQgPSB0b2dnbGUuY2xpZW50SGVpZ2h0OyAvLyBTZXQgYXJpYSBhdHRyaWJ1dGUgdG8gZmFsc2VcblxuICAgIHRvZ2dsZS5zZXRBdHRyaWJ1dGUoXCJhcmlhLWV4cGFuZGVkXCIsIGZhbHNlKTsgLy8gU2V0IHRoZSBoZWlnaHQgc28gb25seSB0aGUgdG9nZ2xlIGlzIHZpc2libGVcblxuICAgIGl0ZW0uc3R5bGUuaGVpZ2h0ID0gdG9nZ2xlX2hlaWdodCArIFwicHhcIjtcbiAgICBpdGVtLnJlbW92ZUF0dHJpYnV0ZShcIm9wZW5cIik7XG4gIH1cblxufVxuXG5leHBvcnQgZGVmYXVsdCAoKCkgPT4ge1xuICBjb25zdCBlbHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKFwiYm1jYi1hY2NvcmRpb25cIik7XG5cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBlbHMubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBhY2NvcmRpb24gPSBuZXcgQWNjb3JkaW9uKGVsc1tpXSk7XG4gIH1cbn0pOyIsImltcG9ydCBhY2NvcmRpb25zIGZyb20gJy4vY29tcG9uZW50cy9hY2NvcmRpb24nO1xuYWNjb3JkaW9ucygpOyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzlHQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///2\n')}]);